<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: code | minimaxir | Max Woolf's Blog]]></title>
  <link href="http://minimaxir.com//code/atom.xml" rel="self"/>
  <link href="http://minimaxir.com/"/>
  <updated>2015-08-13T07:52:00-07:00</updated>
  <id>http://minimaxir.com/</id>
  <author>
    <name><![CDATA[Max Woolf]]></name>
    <email><![CDATA[max@minimaxir.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Making a Video-to-GIF Right-Click Menu Item in OS X]]></title>
    <link href="http://minimaxir.com/2015/08/gif-to-video-osx/"/>
    <updated>2015-08-13T08:00:00-07:00</updated>
    <id>http://minimaxir.com/2015/08/gif-to-video-osx</id>
    <content type="html"><![CDATA[<p><em>TL;DR: To set up the Convert Video to GIF tool, download the &ldquo;Convert Video to GIF&rdquo; Service <a href="https://github.com/minimaxir/video-to-gif-osx">from this GitHub Repository</a> and follow the install instructions in the README.</em></p>

<p>Last weekend, I was working on making a <a href="https://github.com/minimaxir/big-list-of-naughty-strings">Big List of Naughty Strings</a> for user-data testing. (now up to 4,000+ GitHub Stars!) For the README, I needed a visual example to demonstrate why testing bad strings is important. I easily made a video of an internal server error on Twitter using <a href="http://www.apple.com/quicktime/">Quicktime</a> and its <a href="https://support.apple.com/kb/PH5882?locale=en_US">Screen Recording feature</a> to record, crop, and trim the event. But videos cannot render on GitHub; only GIFs can. And ideally I would not include a 807KB file everytime a user loads the GitHub page.</p>

<p>Websites that offer online Video-to-GIF converters are often seedy and create low quality, low frame-rate GIFs. I did some research and eventually I tried <a href="http://www.gifrocket.com">Gifrocket</a>, a recently-released tool that promises effortless drag-and-drop video-to-GIF-conversion.</p>

<p><img src="/img/video-to-gif-osx/zerowidthedit_gifrocket.gif"  ></p>

<p>The quality is not terrible, although the ghosting is <em>weird</em>, and the framerate is choppy when the cursor moves. Unfortunately, I can&rsquo;t optimize any settings. File Size is 534KB, which is a slight compression but not great.</p>

<p>As a result, I gave <a href="http://zulko.github.io/moviepy/">MoviePy</a>, a Python API for manipulating videos another try, as I had used it for other posts on this blog to <a href="http://minimaxir.com/2014/02/moved-temporarily/">good</a> <a href="http://minimaxir.com/2014/03/hashtag-tag/">success</a>. However, I had to shrink them significantly to keep load times down; something I would prefer not to do with my internal server error GIF in order to maximize readability. On the <a href="http://zulko.github.io/blog/2014/01/23/making-animated-gifs-from-video-files-with-python/">blog post announcing GIF support</a>, the core developer <a href="http://zulko.github.io/blog/2014/01/23/making-animated-gifs-from-video-files-with-python/#comment-1216274781">relayed an interesting comment</a> from another reader that &ldquo;mencoder/ImageMagick/gifsickle is a winning trio for Gif making.&rdquo;</p>

<p>I&rsquo;ve heard of ImageMagick before: it&rsquo;s the tool that drives nearly all image manipulation on the internet (it&rsquo;s also what Gifrocket uses). But what was mencoder and gifsickle?</p>

<p>Some searching led to this <a href="https://www.reddit.com/r/reactiongifs/comments/x55z9/after_i_learned_how_to_make_large_well_compressed/c5jbq7c">2012 Reddit comment</a> in the /r/reactiongifs subreddit. That&rsquo;s where everything clicked.</p>

<h2>Shell Games</h2>

<p>The linked Reddit post conveiently uses the same three tools by the commenter on MoviePy. I ran the terminal commands on my video, with a little tweaking.</p>

<p>The first command uses the <code>mencoder</code> functionality of <a href="http://www.mplayerhq.hu/design7/news.html">mplayer</a> to render each frame of the video to PNGs:</p>

<pre><code>mplayer -ao null -vo png:z=1:outdir=gif -vf scale=608:454 zerowidthedit.mov
</code></pre>

<p>I set the size to a width of 608px since it was exactly 50% of the width of the raw video, but I could set it to whatever I want, although it would be ideal to keep the aspect ratio the same.</p>

<p>The second command uses <a href="http://www.imagemagick.org/script/index.php">ImageMagick</a>&rsquo;s famously robust <code>convert</code> comand to convert the rendered frames in to a GIF, with two optimization passes for lower file size and ~16.6ms delay, which is equivalent to 60 frames per second.</p>

<pre><code>convert +repage -fuzz 1.6% -delay 1.7 -loop 0 gif/*.png -layers OptimizePlus -layers OptimizeTransparency Almost.gif
</code></pre>

<p>This results in a 156KB image; much, much better than the 534KB from Gifrocket, and at a much higher framerate too.</p>

<p>Lastly, the GIF is further optimized with <a href="http://www.lcdf.org/gifsicle/">gifsicle</a>, which also limits the color pallete to 256 colors for even lower file size.</p>

<pre><code>gifsicle -O3 --colors 256 Almost.gif &gt; Done.gif
</code></pre>

<p>This results in a 107KB KB, a 31% savings over the already-optimized GIF, without any discernable loss! Here is the final result:</p>

<p><img src="/img/video-to-gif-osx/zerowidthedit_final.gif"  ></p>

<p>Much, <em>much</em> better. No ghosting, 60 FPS, 1/8th of the original video file size, and 1/5th of the file size of the Gifrocket GIF!</p>

<p>Then I realized; aside from the output GIF resolution in from <code>mencoder</code>, the terminal commands for making GIFs are very generic. What if I could easily automate these steps for any video on my Mac?</p>

<h2>Full Automatic</h2>

<p>I decided to make a OS X <a href="http://www.computerworld.com/article/2476298/mac-os-x/os-x-a-quick-guide-to-services-on-your-mac.html">Service</a>, which can be used to automate actions for a specified file type in the form of a right-click menu option. Services can be created using <a href="https://en.wikipedia.org/wiki/Automator_%28software%29">Automator</a>, which is included in all OS X installations. In my case, I want to create a Service for movie files; and when the Service runs, it should Run a Shell Script with the above three commands.</p>

<p><img src="/img/video-to-gif-osx/service.png"  ></p>

<p>After writing the script, which incorporates a maximium GIF width of 480px and will resize larger GIFs to that size while maintaining the aspect ratio, the Service is complete and I can right-click any Movie file and get an optimized GIF!</p>

<p><img src="/img/video-to-gif-osx/convert_to_gif.gif"  ></p>

<p>Yes, even a 41.6MB 720p video file, which most GIF converter sites would never let you upload, becomes a <a href="http://i.imgur.com/0dU3A6o.gif">relatively reasonable 1.3MB GIF</a>!</p>

<p>This approach also has an unexpected benefit; the script support batch conversion, meaning you can convert as many videos as you want at the same time!</p>

<p>As usual, my code is <a href="https://github.com/minimaxir/video-to-gif-osx">open sourced on GitHub</a> with a MIT license, with instructions on how to set up the tool. The repository also includes two bonus utilities; a Shell Script to run the conversion from the command line and an Application which prompts you for movie files instead of needing to right-click. Install the three command-line applications and convert away! Or fork the repository and make an even <em>better</em> Video-to-GIF conversion tool!</p>
]]></content>
  </entry>
  
</feed>
